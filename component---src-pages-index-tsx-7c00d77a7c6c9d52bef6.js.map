{"version":3,"file":"component---src-pages-index-tsx-7c00d77a7c6c9d52bef6.js","mappings":"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","sources":["webpack://gatsby-learn/./src/components/Main/ProfileImage.tsx","webpack://gatsby-learn/./src/components/Main/Introduction.tsx","webpack://gatsby-learn/./src/components/Main/CategoryList.tsx","webpack://gatsby-learn/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://gatsby-learn/./src/components/Main/PostItem.tsx","webpack://gatsby-learn/./src/hooks/useInfiniteScroll.tsx","webpack://gatsby-learn/./src/components/Main/PostList.tsx","webpack://gatsby-learn/./src/pages/index.tsx"],"sourcesContent":["import React, { FunctionComponent } from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst ProfileImageWrapper = styled(GatsbyImage)`\r\n  width: 10rem;\r\n  height: 10rem;\r\n  margin-bottom: 2rem;\r\n  border-radius: 50%;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 5rem;\r\n    height: 5rem;\r\n  }\r\n`;\r\n\r\nexport interface IProfileImageProps {\r\n  profileImage: IGatsbyImageData;\r\n}\r\n\r\nconst ProfileImage: FunctionComponent<IProfileImageProps> = ({ profileImage }) => {\r\n  return <ProfileImageWrapper image={profileImage} alt=\"Profile Image\" />;\r\n};\r\n\r\nexport default ProfileImage;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport ProfileImage, { IProfileImageProps } from \"components/Main/ProfileImage\";\r\nimport { MAIN_WIDTH } from \"utils/variables\";\r\nimport { HEADER_HEIGHT } from \"utils/variables\";\r\n\r\nconst Background = styled.header`\r\n  width: 100%;\r\n  background-image: linear-gradient(60deg, #29323c 0%, #485563 100%);\r\n  color: #fff;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  width: ${MAIN_WIDTH};\r\n  height: ${HEADER_HEIGHT};\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    height: 20rem;\r\n    padding: 0 1.2rem;\r\n  }\r\n`;\r\n\r\nconst SubTitle = styled.h2`\r\n  font-size: 1.2rem;\r\n  font-weight: 400;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin-top: 0.3rem;\r\n  font-size: 2.2rem;\r\n  font-weight: 700;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst Introduction: FunctionComponent<IProfileImageProps> = ({ profileImage }) => {\r\n  return (\r\n    <Background>\r\n      <Wrapper>\r\n        <ProfileImage profileImage={profileImage} />\r\n        <div>\r\n          <SubTitle>Hello world</SubTitle>\r\n          <Title>Gatsby Blog</Title>\r\n        </div>\r\n      </Wrapper>\r\n    </Background>\r\n  );\r\n};\r\n\r\nexport default Introduction;\r\n","import React, { FunctionComponent, ReactNode } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport styled from \"@emotion/styled\";\r\nimport { MAIN_WIDTH } from \"utils/variables\";\r\n\r\ninterface ICategoryListProps {\r\n  selectedCategory: string;\r\n  categoryList: {\r\n    [k: string]: number;\r\n  };\r\n}\r\n\r\nconst CategoryListWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: ${MAIN_WIDTH};\r\n  margin: 1.5rem auto;\r\n  gap: 1rem;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    margin-top: 1.5rem;\r\n    padding: 0 1.2rem;\r\n  }\r\n`;\r\n\r\ninterface ICategoryItemProps {\r\n  active: boolean;\r\n  children: ReactNode;\r\n  className?: string;\r\n  to: string;\r\n}\r\n\r\nconst CategoryItem = styled(({ active, ...props }: ICategoryItemProps) => <Link {...props} />)`\r\n  padding: 0.3rem 0;\r\n  font-size: 1.2rem;\r\n  font-weight: ${({ active }) => (active ? \"800\" : \"400\")};\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst CategoryList: FunctionComponent<ICategoryListProps> = ({\r\n  selectedCategory,\r\n  categoryList,\r\n}) => {\r\n  return (\r\n    <CategoryListWrapper>\r\n      {Object.entries(categoryList).map(([category, count]) => (\r\n        <CategoryItem\r\n          key={category}\r\n          to={`/?category=${category}`}\r\n          active={category.toLowerCase() === selectedCategory.toLowerCase()}\r\n        >\r\n          #{category}({count})\r\n        </CategoryItem>\r\n      ))}\r\n    </CategoryListWrapper>\r\n  );\r\n};\r\n\r\nexport default CategoryList;\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { FunctionComponent } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst PostItemWrapper = styled(Link)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 1rem;\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.15);\r\n  transition: 0.3s box-shadow;\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\n\r\nconst ThumbnailImage = styled(GatsbyImage)`\r\n  width: 100%;\r\n  height: 12.5rem;\r\n  border-radius: 1rem 1rem 0 0;\r\n`;\r\n\r\nconst PostItemContent = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n  gap: 1rem;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  overflow: hidden;\r\n  margin-bottom: 3px;\r\n  text-overflow: ellipsis;\r\n  white-space: normal;\r\n  overflow-wrap: break-word;\r\n  -webkit-line-clamp: 2;\r\n  font-size: 1.2rem;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst Date = styled.span`\r\n  font-size: 0.8rem;\r\n  font-weight: 400;\r\n  opacity: 0.7;\r\n`;\r\n\r\nconst Category = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst CategoryItem = styled.li`\r\n  margin: 0.25rem 0.3rem;\r\n  padding: 0.2rem 0.3rem;\r\n  border-radius: 0.2rem;\r\n  background: seagreen;\r\n  font-size: 0.9rem;\r\n  font-weight: 700;\r\n  color: white;\r\n`;\r\n\r\nconst Summary = styled(Title)`\r\n  margin-top: auto;\r\n  margin-bottom: 0;\r\n  font-size: 1rem;\r\n  font-weight: 400;\r\n  opacity: 0.8;\r\n`;\r\n\r\nexport interface IPost {\r\n  node: {\r\n    id?: string;\r\n    html?: string;\r\n    frontmatter: IFrontmatter;\r\n    fields: IFields;\r\n  };\r\n}\r\n\r\nexport interface IFrontmatter {\r\n  categories: string[];\r\n  date: string;\r\n  summary?: string;\r\n  title: string;\r\n  thumbnail: {\r\n    childImageSharp: {\r\n      gatsbyImageData: IGatsbyImageData;\r\n    };\r\n    publicURL?: string;\r\n  };\r\n}\r\n\r\ninterface IFields {\r\n  slug: string;\r\n}\r\n\r\nconst PostItem: FunctionComponent<IFrontmatter & IFields> = ({\r\n  categories,\r\n  date,\r\n  summary,\r\n  title,\r\n  thumbnail: {\r\n    childImageSharp: { gatsbyImageData },\r\n  },\r\n  slug,\r\n}) => {\r\n  // console.log(thumbnail);\r\n  return (\r\n    <PostItemWrapper to={slug}>\r\n      <ThumbnailImage image={gatsbyImageData} alt=\"Post Item Image\" />\r\n      <PostItemContent>\r\n        <Title>{title}</Title>\r\n        <Date>{date}</Date>\r\n        <Category>\r\n          {categories.map((category) => (\r\n            <CategoryItem key={category}>{category}</CategoryItem>\r\n          ))}\r\n        </Category>\r\n        <Summary>{summary}</Summary>\r\n      </PostItemContent>\r\n    </PostItemWrapper>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n","import { MutableRefObject, useRef, useMemo, useState, useEffect } from \"react\";\r\nimport { IPostListProps } from \"components/Main/PostList\";\r\nimport { CATEGORY_ALL } from \"utils/variables\";\r\n\r\nconst ITEMS_PER_PAGE = 10;\r\n\r\n// IntersectionObserver는 브라우저 API이기 때문에 클라이언트 렌더링 시에 사용할 수 있는 API.\r\n// 로컬 서버를 실행하면 클라이언트 사이드 렌더링을 하기 때문에 IntersectionObserver나 window 객체와 같이 브라우저에서 제공하는 요소를 사용 가능.\r\n\r\n// 하지만 Gatsby는 빌드 시에는 Node.js 환경에서 진행되기 때문에 브라우저 API를 사용 불가.\r\n\r\n// useEffect 내부에 있는 코드는 클라이언트 렌더링 시에 실행되기 때문에 빌드 시에는 실행되지 않음.\r\n\r\nconst useInfiniteScroll = ({ posts, selectedCategory }: IPostListProps) => {\r\n  const containerRef: MutableRefObject<HTMLDivElement | null> = useRef<HTMLDivElement>(null);\r\n  const observer: MutableRefObject<IntersectionObserver | null> =\r\n    useRef<IntersectionObserver>(null);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const postList = useMemo(\r\n    () =>\r\n      posts.filter(\r\n        ({\r\n          node: {\r\n            frontmatter: { categories },\r\n          },\r\n        }) => selectedCategory === CATEGORY_ALL || categories.includes(selectedCategory)\r\n      ),\r\n    [selectedCategory]\r\n  );\r\n\r\n  useEffect(() => {\r\n    observer.current = new IntersectionObserver((entries, observer) => {\r\n      if (!entries[0].isIntersecting) {\r\n        return;\r\n      }\r\n\r\n      setPage((prev) => prev + 1);\r\n      observer.disconnect();\r\n      // observer.unobserve(entries[0].target);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => setPage(1), [selectedCategory]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      ITEMS_PER_PAGE * page >= postList.length ||\r\n      containerRef.current === null ||\r\n      containerRef.current.children.length === 0 ||\r\n      observer.current === null\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    observer.current.observe(Array.from(containerRef.current.children).at(-1)!);\r\n  }, [page, selectedCategory]);\r\n\r\n  return { containerRef, postList: postList.slice(0, page * ITEMS_PER_PAGE) };\r\n};\r\n\r\nexport default useInfiniteScroll;\r\n","import React, { FunctionComponent, useMemo } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport PostItem, { IPost } from \"./PostItem\";\r\nimport useInfiniteScroll from \"hooks/useInfiniteScroll\";\r\nimport { MAIN_WIDTH } from \"utils/variables\";\r\n\r\nconst PostListWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 1.2rem;\r\n  width: ${MAIN_WIDTH};\r\n  margin: 0 auto;\r\n  padding: 3rem 0.2rem 6rem;\r\n  background-color: #7bb3c2;\r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n    width: 100%;\r\n    padding: 3rem 1.2rem;\r\n  }\r\n`;\r\n\r\nexport interface IPostListProps {\r\n  posts: IPost[];\r\n  selectedCategory: string;\r\n}\r\n\r\nconst PostList: FunctionComponent<IPostListProps> = ({ posts, selectedCategory }) => {\r\n  const { containerRef, postList } = useInfiniteScroll({ posts, selectedCategory });\r\n  // console.log(containerRef);\r\n\r\n  return (\r\n    <PostListWrapper ref={containerRef}>\r\n      {postList.map(({ node: { id, frontmatter, fields } }) => (\r\n        <PostItem key={id} {...frontmatter} {...fields} />\r\n      ))}\r\n    </PostListWrapper>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","import React, { FunctionComponent, useMemo } from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport { SerializedStyles } from \"@emotion/react\";\r\nimport { IGatsbyImageData } from \"gatsby-plugin-image\";\r\nimport Introduction from \"components/Main/Introduction\";\r\nimport CategoryList from \"components/Main/CategoryList\";\r\nimport PostList from \"components/Main/PostList\";\r\nimport { IPost } from \"components/Main/PostItem\";\r\nimport Template from \"components/Common/Template\";\r\nimport { CATEGORY_ALL } from \"utils/variables\";\r\n\r\ninterface IIndexPagePros {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: IPost[];\r\n    };\r\n    file: {\r\n      childImageSharp: {\r\n        gatsbyImageData: IGatsbyImageData;\r\n      };\r\n      publicURL: string;\r\n    };\r\n    site: {\r\n      siteMetadata: {\r\n        title: string;\r\n        description: string;\r\n        siteUrl: string;\r\n      };\r\n    };\r\n  };\r\n  location: {\r\n    search: string;\r\n  };\r\n}\r\n\r\nexport const getPostList = graphql`\r\n  query getPostList {\r\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }) {\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY. MM. DD.\")\r\n            categories\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 768, height: 400)\r\n              }\r\n            }\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n    file(name: { eq: \"profile_image\" }) {\r\n      childImageSharp {\r\n        gatsbyImageData(width: 120, height: 120)\r\n      }\r\n      publicURL\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        siteUrl\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst IndexPage: FunctionComponent<IIndexPagePros> = ({\r\n  data: {\r\n    allMarkdownRemark: { edges },\r\n    file: {\r\n      childImageSharp: { gatsbyImageData },\r\n      publicURL,\r\n    },\r\n    site: {\r\n      siteMetadata: { title, description, siteUrl },\r\n    },\r\n  },\r\n  location: { search },\r\n}) => {\r\n  const categoryList = useMemo(\r\n    () =>\r\n      edges.reduce(\r\n        (\r\n          catList,\r\n          {\r\n            node: {\r\n              frontmatter: { categories },\r\n            },\r\n          }\r\n        ) => {\r\n          categories.forEach((category) => {\r\n            if (!(category in catList)) {\r\n              catList[category] = 0;\r\n            }\r\n            catList[category] += 1;\r\n          });\r\n\r\n          catList[CATEGORY_ALL] += 1;\r\n\r\n          return catList;\r\n        },\r\n        { [CATEGORY_ALL]: 0 } as { [k: string]: number }\r\n      ),\r\n    []\r\n  );\r\n\r\n  const params = new URLSearchParams(search);\r\n  let selectedCategory = params.get(\"category\") || CATEGORY_ALL;\r\n\r\n  if (!(selectedCategory in categoryList)) {\r\n    selectedCategory = CATEGORY_ALL;\r\n  }\r\n\r\n  return (\r\n    <Template {...{ title, description, url: siteUrl, image: publicURL }}>\r\n      <Introduction profileImage={gatsbyImageData} />\r\n      <CategoryList selectedCategory={selectedCategory} categoryList={categoryList} />\r\n      <PostList selectedCategory={selectedCategory} posts={edges} />\r\n    </Template>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n\r\ndeclare module \"react\" {\r\n  interface HTMLAttributes<T> extends AriaAttributes, DOMAttributes<T> {\r\n    css?: SerializedStyles;\r\n    repo?: string;\r\n    label?: string;\r\n    theme?: string;\r\n  }\r\n}\r\n"],"names":["ProfileImageWrapper","_styled","GatsbyImage","process","profileImage","___EmotionJSX","image","alt","Background","Wrapper","MAIN_WIDTH","HEADER_HEIGHT","SubTitle","Title","ProfileImage","CategoryListWrapper","CategoryItem","active","props","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","Link","selectedCategory","categoryList","entries","map","category","count","to","toLowerCase","PostItemWrapper","ThumbnailImage","PostItemContent","Date","Category","Summary","categories","date","summary","title","gatsbyImageData","thumbnail","childImageSharp","slug","posts","containerRef","useRef","observer","useState","page","setPage","postList","useMemo","filter","node","frontmatter","CATEGORY_ALL","includes","useEffect","current","IntersectionObserver","isIntersecting","prev","disconnect","children","observe","Array","from","at","slice","PostListWrapper","useInfiniteScroll","ref","id","fields","PostItem","data","edges","allMarkdownRemark","file","publicURL","site","siteMetadata","description","siteUrl","search","location","reduce","catList","forEach","URLSearchParams","get","Template","url","Introduction","CategoryList","PostList"],"sourceRoot":""}